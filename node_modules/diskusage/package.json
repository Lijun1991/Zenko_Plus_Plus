{
  "_args": [
    [
      {
        "raw": "diskusage@^0.2.2",
        "scope": null,
        "escapedName": "diskusage",
        "name": "diskusage",
        "rawSpec": "^0.2.2",
        "spec": ">=0.2.2 <0.3.0",
        "type": "range"
      },
      "/nfs/2016/a/ahunt/Zenko_Plus_Plus/GCS/node_modules/arsenal"
    ]
  ],
  "_from": "diskusage@>=0.2.2 <0.3.0",
  "_id": "diskusage@0.2.2",
  "_inCache": true,
  "_location": "/diskusage",
  "_nodeVersion": "6.2.2",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/diskusage-0.2.2.tgz_1493791572422_0.4410418395418674"
  },
  "_npmUser": {
    "name": "jduncanator",
    "email": "jduncanator@hotmail.com"
  },
  "_npmVersion": "4.0.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "diskusage@^0.2.2",
    "scope": null,
    "escapedName": "diskusage",
    "name": "diskusage",
    "rawSpec": "^0.2.2",
    "spec": ">=0.2.2 <0.3.0",
    "type": "range"
  },
  "_requiredBy": [
    "/arsenal"
  ],
  "_resolved": "https://registry.npmjs.org/diskusage/-/diskusage-0.2.2.tgz",
  "_shasum": "59eff1cafd98f4a5728447ddeead7d9dd16a3226",
  "_shrinkwrap": null,
  "_spec": "diskusage@^0.2.2",
  "_where": "/nfs/2016/a/ahunt/Zenko_Plus_Plus/GCS/node_modules/arsenal",
  "author": {
    "name": "jduncanator"
  },
  "bugs": {
    "url": "https://github.com/jduncanator/node-diskusage/issues"
  },
  "dependencies": {
    "nan": "^2.5.0"
  },
  "description": "Get total diskspace and free diskspace using bindings around platform specific calls.",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "59eff1cafd98f4a5728447ddeead7d9dd16a3226",
    "tarball": "https://registry.npmjs.org/diskusage/-/diskusage-0.2.2.tgz"
  },
  "gitHead": "b2b20ccda80c8044f0102ccb6f564a6ae4d0781a",
  "gypfile": true,
  "homepage": "https://github.com/jduncanator/node-diskusage",
  "keywords": [
    "disk",
    "usage",
    "df",
    "hdd",
    "ssd",
    "diskusage",
    "df",
    "free",
    "space"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "jduncanator",
      "email": "jduncanator@hotmail.com"
    }
  ],
  "name": "diskusage",
  "optionalDependencies": {},
  "readme": "node-diskusage\r\n==============\r\n\r\nThis module implements platform specific bindings to obtain disk usage information on Windows and POSIX platforms. Windows support is backed by [GetDiskFreeSpaceEx](http://msdn.microsoft.com/en-us/library/windows/desktop/aa364937/) and POSIX is implemented with [statvfs](http://www.freebsd.org/cgi/man.cgi?query=statvfs).\r\n\r\nInstallation\r\n------------\r\n\r\nInstall with `npm`:\r\n\r\n``` bash\r\n$ npm install diskusage\r\n```\r\n\r\nUsage\r\n--------\r\n\r\nThe module exposes two functions. `check` takes a path/mount point as the first argument and a callback as the second. The callback takes two arguments `err` and `info`. `err` will be an `Error` if something went wrong. `info` contains three members: `available`, `free` and `total` in bytes.\r\n\r\n- `available`: Disk space available to the current user (i.e. Linux reserves 5% for root)\r\n- `free`: Disk space physically free\r\n- `total`: Total disk space (free + used)\r\n\r\n`checkSync` only takes the path argument. It returns the same `info` on success, throws an `Error` on failure.\r\n\r\nExamples\r\n--------\r\n\r\n``` js\r\nconst disk = require('diskusage');\r\n\r\nlet path = os.platform() === 'win32' ? 'c:' : '/';\r\n\r\ndisk.check(path, function(err, info) {\r\n\tif (err) {\r\n\t\tconsole.log(err);\r\n\t} else {\r\n\t\tconsole.log(info.available);\r\n\t\tconsole.log(info.free);\r\n\t\tconsole.log(info.total);\r\n\t}\r\n});\r\n\r\ntry {\r\n\tlet info = disk.checkSync(path);\r\n\tconsole.log(info.available);\r\n\tconsole.log(info.free);\r\n\tconsole.log(info.total);\r\n}\r\ncatch (err) {\r\n\tconsole.log(err);\r\n}\r\n```\r\n\r\nTypeScript\r\n----------\r\n\r\nThe module has an embedded .d.ts file. You can use `import * as diskusage from 'diskusage'`.\r\n\r\n```\r\ntype DiskUsage = {\r\n    available: number;\r\n    free: number;\r\n    total: number;\r\n}\r\n\r\nexport function check(path: string, callback: (error: Error, result: DiskUsage) => void): void;\r\nexport function checkSync(path: string): DiskUsage;\r\n```\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jduncanator/node-diskusage.git"
  },
  "scripts": {
    "install": "node-gyp rebuild"
  },
  "typings": "index.d.ts",
  "version": "0.2.2"
}
